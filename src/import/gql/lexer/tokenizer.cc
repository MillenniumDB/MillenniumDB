/* Generated by re2c 3.1 on Mon Nov 25 19:12:03 2024 */
#line 1 "tokenizer_template.cpp"
// re2c tokenizer_template.cpp -o tokenizer.cc
#include <cstring>

#include "import/gql/lexer/token.h"
#include "import/gql/lexer/tokenizer.h"
#include "system/string_manager.h"

#line 11 "tokenizer.cc"
#define YYMAXFILL 6
#line 8 "tokenizer_template.cpp"

static const size_t GQLTokenizer_SIZE = StringManager::MAX_STRING_SIZE;

GQLTokenizer::GQLTokenizer() :
    _str(new char[GQLTokenizer_SIZE + YYMAXFILL]),
    buf(new char[GQLTokenizer_SIZE + YYMAXFILL]),
    lim(buf + GQLTokenizer_SIZE),
    cur(lim),
    mar(lim),
    token_start(lim),
    eof(false)
{ }

GQLTokenizer::~GQLTokenizer()
{
    delete[] buf;
    delete[] str;
}

void GQLTokenizer::begin(MDBIstream& in)
{
    this->in = &in;
}

bool GQLTokenizer::fill(size_t need)
{
    if (eof) {
        return false;
    }
    const size_t free = token_start - buf;
    if (free < need) {
        return false;
    }
    memmove(buf, token_start, lim - token_start);
    lim -= free;
    cur -= free;
    mar -= free;
    token_start -= free;
    // std::cout << "trying to read " << free << " bytes\n";
    auto r = in->read(lim, free);
    // std::cout << "read " << r << " bytes\n";
    lim += r;

    if (lim < buf + GQLTokenizer_SIZE) {
        if (r == 0)
            return false;
        eof = true;
        memset(lim, 0, YYMAXFILL);
        lim += YYMAXFILL - 1;
    }
    return true;
}

Import::GQL::Token GQLTokenizer::get_token()
{
    auto res = _get_token();

    str_len = cur - token_start;

    std::memcpy(_str, token_start, str_len);
    _str[str_len] = '\0';

    str = _str;

    return res;
}

Import::GQL::Token GQLTokenizer::_get_token()
{
    token_start = cur;
    
#line 85 "tokenizer.cc"
{
	char yych;
	unsigned int yyaccept = 0;
	if ((lim - cur) < 6) if (!fill(6)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy3;
		case '\n': goto yy5;
		case '"': goto yy6;
		case '+': goto yy7;
		case '-': goto yy8;
		case '.': goto yy9;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy10;
		case ':': goto yy12;
		case '<': goto yy13;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case '[':
		case '\\':
		case ']':
		case '^':
		case '_':
		case '`': goto yy16;
		case 'f': goto yy18;
		case 't': goto yy19;
		case '~': goto yy20;
		default: goto yy1;
	}
yy1:
	++cur;
yy2:
#line 114 "tokenizer_template.cpp"
	{ return Import::GQL::Token::UNRECOGNIZED; }
#line 178 "tokenizer.cc"
yy3:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy3;
		default: goto yy4;
	}
yy4:
#line 112 "tokenizer_template.cpp"
	{ return Import::GQL::Token::WHITESPACE; }
#line 192 "tokenizer.cc"
yy5:
	++cur;
#line 113 "tokenizer_template.cpp"
	{ return Import::GQL::Token::ENDLINE; }
#line 197 "tokenizer.cc"
yy6:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '"': goto yy21;
		case '\\': goto yy22;
		default: goto yy6;
	}
yy7:
	yyaccept = 0;
	yych = *(mar = ++cur);
	switch (yych) {
		case '.': goto yy23;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy10;
		default: goto yy2;
	}
yy8:
	yyaccept = 0;
	yych = *(mar = ++cur);
	switch (yych) {
		case '.': goto yy23;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy10;
		case '>': goto yy25;
		default: goto yy2;
	}
yy9:
	yych = *++cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy26;
		default: goto yy2;
	}
yy10:
	yyaccept = 1;
	mar = ++cur;
	if ((lim - cur) < 3) if (!fill(3)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '.': goto yy23;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy10;
		case 'E':
		case 'e': goto yy28;
		default: goto yy11;
	}
yy11:
#line 110 "tokenizer_template.cpp"
	{ return Import::GQL::Token::INTEGER; }
#line 281 "tokenizer.cc"
yy12:
	++cur;
#line 101 "tokenizer_template.cpp"
	{ return Import::GQL::Token::COLON; }
#line 286 "tokenizer.cc"
yy13:
	yych = *++cur;
	switch (yych) {
		case '-': goto yy29;
		default: goto yy2;
	}
yy14:
	yyaccept = 2;
	mar = ++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case '_': goto yy16;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		default: goto yy15;
	}
yy15:
#line 109 "tokenizer_template.cpp"
	{ return Import::GQL::Token::IDENTIFIER; }
#line 371 "tokenizer.cc"
yy16:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
yy17:
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy16;
		default: goto yy15;
	}
yy18:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 'a': goto yy32;
		default: goto yy17;
	}
yy19:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 'r': goto yy33;
		default: goto yy17;
	}
yy20:
	++cur;
#line 104 "tokenizer_template.cpp"
	{ return Import::GQL::Token::UNDIRECTED; }
#line 571 "tokenizer.cc"
yy21:
	++cur;
#line 107 "tokenizer_template.cpp"
	{ return Import::GQL::Token::STRING; }
#line 576 "tokenizer.cc"
yy22:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	goto yy6;
yy23:
	yych = *++cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy26;
		default: goto yy24;
	}
yy24:
	cur = mar;
	switch (yyaccept) {
		case 0: goto yy2;
		case 1: goto yy11;
		case 2: goto yy15;
		case 3: goto yy27;
		case 4: goto yy43;
		default: goto yy46;
	}
yy25:
	++cur;
#line 103 "tokenizer_template.cpp"
	{ return Import::GQL::Token::R_ARROW; }
#line 610 "tokenizer.cc"
yy26:
	yyaccept = 3;
	mar = ++cur;
	if ((lim - cur) < 3) if (!fill(3)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy26;
		case 'E':
		case 'e': goto yy28;
		default: goto yy27;
	}
yy27:
#line 111 "tokenizer_template.cpp"
	{ return Import::GQL::Token::FLOAT; }
#line 634 "tokenizer.cc"
yy28:
	yych = *++cur;
	switch (yych) {
		case '+':
		case '-': goto yy34;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy35;
		default: goto yy24;
	}
yy29:
	++cur;
#line 102 "tokenizer_template.cpp"
	{ return Import::GQL::Token::L_ARROW; }
#line 656 "tokenizer.cc"
yy30:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		default: goto yy24;
	}
yy31:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy31;
		case '"': goto yy36;
		default: goto yy24;
	}
yy32:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 'l': goto yy37;
		default: goto yy17;
	}
yy33:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 'u': goto yy38;
		default: goto yy17;
	}
yy34:
	yych = *++cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy35;
		default: goto yy24;
	}
yy35:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy35;
		default: goto yy27;
	}
yy36:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '"': goto yy39;
		case '\\': goto yy40;
		default: goto yy36;
	}
yy37:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 's': goto yy41;
		default: goto yy17;
	}
yy38:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 'e': goto yy42;
		default: goto yy17;
	}
yy39:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	yych = *cur;
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy39;
		case ')': goto yy44;
		default: goto yy24;
	}
yy40:
	++cur;
	if (lim <= cur) if (!fill(1)) return Import::GQL::Token::END_OF_FILE;
	goto yy36;
yy41:
	yyaccept = 2;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		case 'e': goto yy45;
		default: goto yy17;
	}
yy42:
	yyaccept = 4;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case '_': goto yy16;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		default: goto yy43;
	}
yy43:
#line 105 "tokenizer_template.cpp"
	{ return Import::GQL::Token::TRUE; }
#line 1121 "tokenizer.cc"
yy44:
	++cur;
#line 108 "tokenizer_template.cpp"
	{ return Import::GQL::Token::TYPED_STRING; }
#line 1126 "tokenizer.cc"
yy45:
	yyaccept = 5;
	yych = *(mar = ++cur);
	switch (yych) {
		case '\t':
		case '\r':
		case ' ': goto yy30;
		case '(': goto yy31;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case '_': goto yy16;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy14;
		default: goto yy46;
	}
yy46:
#line 106 "tokenizer_template.cpp"
	{ return Import::GQL::Token::FALSE; }
#line 1203 "tokenizer.cc"
}
#line 115 "tokenizer_template.cpp"

    return Import::GQL::Token::END_OF_FILE;
}
