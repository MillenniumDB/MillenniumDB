#pragma once

#include "query/parser/grammar/sparql/query_autogenerated/SparqlQueryParser.h"

/**
 * This traits are utilities for handling Parser nodes that share the same structure.
 * For example, the only difference between ObjectContext and ObjectPathContext is that
 * the latter have the suffix "Path" on most of its descendants.
 */
namespace SPARQL {

struct ObjectContextTraits {
    using ContextType = SparqlQueryParser::ObjectContext;

    static auto* get_graph_node(ContextType* ctx)
    {
        return ctx->graphNode();
    }

    static auto* get_var_or_term(SparqlQueryParser::GraphNodeContext* ctx)
    {
        return ctx->varOrTerm();
    }

    static auto* get_triples_node(SparqlQueryParser::GraphNodeContext* ctx)
    {
        return ctx->triplesNode();
    }

    static auto* get_collection(SparqlQueryParser::TriplesNodeContext* ctx)
    {
        return ctx->collection();
    }

    static auto get_graph_node_vector(SparqlQueryParser::CollectionContext* ctx)
    {
        return ctx->graphNode();
    }

    static auto* get_blank_node_property_list(SparqlQueryParser::TriplesNodeContext* ctx)
    {
        return ctx->blankNodePropertyList();
    }
};

struct ObjectPathContextTraits {
    using ContextType = SparqlQueryParser::ObjectPathContext;

    static auto* get_graph_node(ContextType* ctx)
    {
        return ctx->graphNodePath();
    }

    static auto* get_var_or_term(SparqlQueryParser::GraphNodePathContext* ctx)
    {
        return ctx->varOrTerm();
    }

    static auto* get_triples_node(SparqlQueryParser::GraphNodePathContext* ctx)
    {
        return ctx->triplesNodePath();
    }

    static auto* get_collection(SparqlQueryParser::TriplesNodePathContext* ctx)
    {
        return ctx->collectionPath();
    }

    static auto get_graph_node_vector(SparqlQueryParser::CollectionPathContext* ctx)
    {
        return ctx->graphNodePath();
    }

    static auto* get_blank_node_property_list(SparqlQueryParser::TriplesNodePathContext* ctx)
    {
        return ctx->blankNodePropertyListPath();
    }
};
} // namespace SPARQL
