
// Generated from GQLLexer.g4 by ANTLR 4.13.1

#pragma once


#include "antlr4-runtime.h"




class  GQLLexer : public antlr4::Lexer {
public:
  enum {
    AMPERSAND = 1, ASTERISK = 2, CIRCUMFLEX = 3, COLON = 4, COMMA = 5, DOLLAR_SIGN = 6, 
    EQUALS_OPERATOR = 7, EXCLAMATION_MARK = 8, RIGHT_ANGLE_BRACKET = 9, 
    LEFT_BRACE = 10, LEFT_BRACKET = 11, LEFT_PAREN = 12, LEFT_ANGLE_BRACKET = 13, 
    MINUS_SIGN = 14, PERCENT = 15, PERIOD = 16, PLUS_SIGN = 17, QUESTION_MARK = 18, 
    REVERSE_SOLIDUS = 19, RIGHT_BRACE = 20, RIGHT_BRACKET = 21, RIGHT_PAREN = 22, 
    SEMICOLON = 23, SOLIDUS = 24, TILDE = 25, UNDERSCORE = 26, VERTICAL_BAR = 27, 
    ABS = 28, ACOS = 29, ACYCLIC = 30, ALL = 31, ALL_DIFFERENT = 32, AND = 33, 
    ANY = 34, ARRAY = 35, AS = 36, ASC = 37, ASCENDING = 38, ASIN = 39, 
    AT = 40, ATAN = 41, AVG = 42, BIG = 43, BIGINT = 44, BINARY = 45, BINDING = 46, 
    BINDINGS = 47, BOOL = 48, BOOLEAN = 49, BOTH = 50, BTRIM = 51, BY = 52, 
    BYTE_LENGTH = 53, BYTES = 54, CALL = 55, CASE = 56, CAST = 57, CEIL = 58, 
    CEILING = 59, CHAR_LENGTH = 60, CHARACTER_LENGTH = 61, CHARACTERISTICS = 62, 
    CLOSE = 63, COALESCE = 64, COLLECT = 65, COMMIT = 66, CONNECTING = 67, 
    COPY = 68, COS = 69, COSH = 70, COT = 71, COUNT = 72, CREATE = 73, CURRENT_DATE = 74, 
    CURRENT_GRAPH = 75, CURRENT_PROPERTY_GRAPH = 76, CURRENT_SCHEMA = 77, 
    CURRENT_TIME = 78, CURRENT_TIMESTAMP = 79, CURRENT_USER = 80, DATE = 81, 
    DATETIME = 82, DEC = 83, DECIMAL = 84, DEGREES = 85, DELETE = 86, DESC = 87, 
    DESCENDING = 88, DESTINATION = 89, DETACH = 90, DIFFERENT = 91, DIRECTED = 92, 
    DISTINCT = 93, DOUBLE = 94, DROP = 95, DURATION = 96, DURATION_BETWEEN = 97, 
    ELEMENT = 98, ELEMENT_ID = 99, ELEMENTS = 100, ELSE = 101, END = 102, 
    EXCEPT = 103, EXISTS = 104, EXP = 105, FALSE = 106, FILTER = 107, FINISH = 108, 
    FIRST = 109, FLOAT = 110, FLOAT128 = 111, FLOAT16 = 112, FLOAT256 = 113, 
    FLOAT32 = 114, FLOAT64 = 115, FLOOR = 116, FOR = 117, FROM = 118, GRAPH = 119, 
    GROUP = 120, GROUPS = 121, HAVING = 122, HOME_GRAPH = 123, HOME_PROPERTY_GRAPH = 124, 
    HOME_SCHEMA = 125, I_DONT_KNOW_1 = 126, I_DONT_KNOW_2 = 127, I_DONT_KNOW_3 = 128, 
    I_DONT_KNOW_4 = 129, I_DONT_KNOW_5 = 130, IF = 131, IN = 132, INSERT = 133, 
    INT = 134, INT8 = 135, INT16 = 136, INT32 = 137, INT64 = 138, INT128 = 139, 
    INT256 = 140, INTEGER = 141, INTEGER8 = 142, INTEGER16 = 143, INTEGER32 = 144, 
    INTEGER64 = 145, INTEGER128 = 146, INTEGER256 = 147, INTERSECT = 148, 
    IS = 149, KEEP = 150, LABEL = 151, LABELED = 152, LABELS = 153, LAST = 154, 
    LEADING = 155, LEFT = 156, LET = 157, LIKE = 158, LIMIT = 159, LIST = 160, 
    LN = 161, LOCAL = 162, LOCAL_DATETIME = 163, LOCAL_TIME = 164, LOCAL_TIMESTAMP = 165, 
    LOG = 166, LOG10 = 167, LOWER = 168, LTRIM = 169, MATCH = 170, MAX = 171, 
    MIN = 172, MOD = 173, NEXT = 174, NFC = 175, NFD = 176, NFKC = 177, 
    NFKD = 178, NO = 179, NODETACH = 180, NORMALIZE = 181, NORMALIZED = 182, 
    NOT = 183, NULL_ = 184, NULLIF = 185, NULLS = 186, OCTET_LENGTH = 187, 
    OF = 188, OFFSET = 189, SKIP_ = 190, ONLY = 191, OPEN = 192, OPTIONAL = 193, 
    OR = 194, ORDER = 195, ORDINALITY = 196, OTHERWISE = 197, PARAMETER = 198, 
    PARAMETERS = 199, PATH = 200, PATH_LENGTH = 201, PATHS = 202, PERCENTILE_CONT = 203, 
    PERCENTILE_DISC = 204, POWER = 205, PRECISION = 206, PROPERTY = 207, 
    PROPERTY_EXISTS = 208, RADIANS = 209, READ = 210, REAL = 211, RECORD = 212, 
    REMOVE = 213, REPEATABLE = 214, REPLACE = 215, RESET = 216, RETURN = 217, 
    ROLLBACK = 218, RTRIM = 219, RIGHT = 220, SAME = 221, SCHEMA = 222, 
    SELECT = 223, SESSION = 224, SET = 225, SHORTEST = 226, SIGNED = 227, 
    SIMPLE = 228, SIN = 229, SINH = 230, SMALL = 231, SMALLINT = 232, SOURCE = 233, 
    SQRT = 234, START = 235, STDDEV_POP = 236, STDDEV_SAMP = 237, STRING = 238, 
    SUM = 239, TABLE = 240, TAN = 241, TANH = 242, TEMP = 243, THEN = 244, 
    TIME = 245, TIMESTAMP = 246, TIMEZONE = 247, TO = 248, TRAIL = 249, 
    TRAILING = 250, TRANSACTION = 251, TRIM = 252, TRUE = 253, TYPE = 254, 
    TYPED = 255, UBIGINT = 256, UINT = 257, UINT128 = 258, UINT16 = 259, 
    UINT256 = 260, UINT32 = 261, UINT64 = 262, UINT8 = 263, UNDIRECTED = 264, 
    UNION = 265, UNKNOWN = 266, UNSIGNED = 267, UPPER = 268, USE = 269, 
    USMALLINT = 270, VALUE = 271, VARBINARY = 272, VARCHAR = 273, VARIABLE = 274, 
    WALK = 275, WHEN = 276, WHERE = 277, WITH = 278, WITHOUT = 279, WRITE = 280, 
    XOR = 281, YIELD = 282, ZONE = 283, ZONED = 284, ZONED_DATETIME = 285, 
    ZONED_TIME = 286, INTERVAL_DAY = 287, INTERVAL_WEEK = 288, INTERVAL_MONTH = 289, 
    INTERVAL_YEAR = 290, EDGE_SYNONYM = 291, EDGES_SYNONYM = 292, NODE_SYNONYM = 293, 
    KEY_WORD = 294, RESERVED_WORD = 295, PRE_RESERVED_WORD = 296, NON_RESERVED_WORD = 297, 
    MULTISET_ALTERNATION_OPERATOR = 298, CONCATENATION_OPERATOR = 299, DOUBLE_COLON = 300, 
    DOUBLE_PERIOD = 301, GREATER_THAN_OR_EQUALS_OPERATOR = 302, LEFT_MINUS_RIGHT = 303, 
    LEFT_MINUS_SLASH = 304, LEFT_TILDE_SLASH = 305, LESS_THAN_OR_EQUALS_OPERATOR = 306, 
    MINUS_SLASH = 307, NOT_EQUALS_OPERATOR = 308, RIGHT_ARROW = 309, SLASH_MINUS_RIGHT = 310, 
    SLASH_TILDE_RIGHT = 311, TILDE_RIGHT_ARROW = 312, TILDE_SLASH = 313, 
    DOUBLE_SOLIDUS = 314, ESCAPED_CHARACTER = 315, ESCAPED_REVERSE_SOLIDUS = 316, 
    ESCAPED_QUOTE = 317, ESCAPED_DOUBLE_QUOTE = 318, ESCAPED_GRAVE_ACCENT = 319, 
    ESCAPED_TAB = 320, ESCAPED_BACKSPACE = 321, ESCAPED_NEWLINE = 322, ESCAPED_CARRIAGE_RETURN = 323, 
    ESCAPED_FORM_FEED = 324, UNICODE_ESCAPE_VALUE = 325, UNICODE_4_DIGIT_ESCAPE_VALUE = 326, 
    UNICODE_6_DIGIT_ESCAPE_VALUE = 327, UNSIGNED_DECIMAL_INTEGER = 328, 
    UNSIGNED_HEXADECIMAL_INTEGER = 329, UNSIGNED_OCTAL_INTEGER = 330, UNSIGNED_BINARY_INTEGER = 331, 
    UNSIGNED_DECIMAL_IN_SCIENTIFIC_NOTATION = 332, UNSIGNED_DECIMAL_IN_COMMON_NOTATION = 333, 
    FOUR_DIGIT = 334, DOUBLE_DIGIT = 335, SINGLE_QUOTED_STRING_LITERAL = 336, 
    DOUBLE_QUOTED_STRING_LITERAL = 337, ACCENT_QUOTED_STRING_LITERAL = 338, 
    BYTE_STRING_LITERAL = 339, QUOTE = 340, DOUBLE_QUOTE = 341, GRAVE_ACCENT = 342, 
    REGULAR_IDENTIFIER = 343, IDENTIFIER_START = 344, IDENTIFIER_EXTEND = 345, 
    SP = 346, SEPARATOR = 347, WHITESPACE = 348, Comment = 349, BIDIRECTIONAL_CONTROL_CHARACTER = 350, 
    COMMENT = 351, SIMPLE_COMMENT = 352, SIMPLE_COMMENT_INTRODUCER = 353, 
    SIMPLE_COMMENT_CHARACTER = 354, BRACKETED_COMMENT = 355, BRACKETED_COMMENT_INTRODUCER = 356, 
    BRACKETED_COMMENT_TERMINATOR = 357, BRACKETED_COMMENT_CONTENTS = 358, 
    GQL_TERMINAL_CHARACTER = 359, GQL_LANGUAGE_CHARACTER = 360, SIMPLE_LATIN_LETTER = 361, 
    SIMPLE_LATIN_LOWER_CASE_LETTER = 362, SIMPLE_LATIN_UPPER_CASE_LETTER = 363, 
    OTHER_DIGIT = 364, GQL_SPECIAL_CHARACTER = 365, OTHER_LANGUAGE_CHARACTER = 366
  };

  explicit GQLLexer(antlr4::CharStream *input);

  ~GQLLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

