
// Generated from MQL_Lexer.g4 by ANTLR 4.13.1


#include "MQL_Lexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct MQL_LexerStaticData final {
  MQL_LexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  MQL_LexerStaticData(const MQL_LexerStaticData&) = delete;
  MQL_LexerStaticData(MQL_LexerStaticData&&) = delete;
  MQL_LexerStaticData& operator=(const MQL_LexerStaticData&) = delete;
  MQL_LexerStaticData& operator=(MQL_LexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag mql_lexerLexerOnceFlag;
#if ANTLR4_USE_THREAD_LOCAL_CACHE
static thread_local
#endif
MQL_LexerStaticData *mql_lexerLexerStaticData = nullptr;

void mql_lexerLexerInitialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  if (mql_lexerLexerStaticData != nullptr) {
    return;
  }
#else
  assert(mql_lexerLexerStaticData == nullptr);
#endif
  auto staticData = std::make_unique<MQL_LexerStaticData>(
    std::vector<std::string>{
      "K_ACYCLIC", "K_AND", "K_ANGULAR", "K_ANY", "K_AS", "K_AVG", "K_ALL", 
      "K_ASC", "K_BY", "K_BOOL", "K_COUNT", "K_CREATE", "K_DELETE", "K_DESCRIBE", 
      "K_DESC", "K_DIMENSIONS", "K_DISTINCT", "K_EDGE", "K_EUCLIDEAN", "K_FROM", 
      "K_INCOMING", "K_INDEX", "K_INSERT", "K_INTEGER", "K_INTO", "K_IS", 
      "K_FALSE", "K_FLOAT", "K_GROUP", "K_IDENTITY", "K_LABELS", "K_LABEL", 
      "K_LIMIT", "K_MANHATTAN", "K_MATCH", "K_MAX", "K_MIN", "K_NFKD_CASEFOLD", 
      "K_NORMALIZE", "K_OBJECTS", "K_OFFSET", "K_ON", "K_OPTIONAL", "K_ORDER", 
      "K_OR", "K_OUTGOING", "K_PREFIX", "K_PROPERTIES", "K_PROPERTY", "K_NOT", 
      "K_NULL", "K_SHORTEST", "K_SHOW", "K_SIMPLE", "K_TENSOR_DISTANCE", 
      "K_TEXT_SEARCH", "K_REGEX", "K_RETURN", "K_SET", "K_SUM", "K_STRING", 
      "K_STORE", "K_TENSOR", "K_TEXT", "K_TRUE", "K_TOKENIZE", "K_TRAILS", 
      "K_VALUES", "K_WALKS", "K_WITH", "K_WHERE", "K_WS_KEEP_PUNCT", "K_WS_RM_PUNCT", 
      "K_WS_SPLIT_PUNCT", "TRUE_PROP", "FALSE_PROP", "ANON_ID", "EDGE_ID", 
      "KEY", "TYPE", "TYPE_VAR", "VARIABLE", "STRING", "UNSIGNED_INTEGER", 
      "UNSIGNED_FLOAT", "UNSIGNED_SCIENTIFIC_NOTATION", "NAME", "LEQ", "GEQ", 
      "EQ", "NEQ", "LT", "GT", "SINGLE_EQ", "PATH_SEQUENCE", "PATH_ALTERNATIVE", 
      "PATH_NEGATION", "STAR", "PERCENT", "QUESTION_MARK", "PLUS", "MINUS", 
      "L_PAR", "R_PAR", "LCURLY_BRACKET", "RCURLY_BRACKET", "LSQUARE_BRACKET", 
      "RSQUARE_BRACKET", "COMMA", "COLON", "WHITE_SPACE", "SINGLE_LINE_COMMENT", 
      "UNRECOGNIZED", "DIGIT", "EXPONENT", "A", "B", "C", "D", "E", "F", 
      "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", 
      "U", "V", "W", "X", "Y", "Z"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "'false'", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "'true'", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "'<='", "'>='", "'=='", "'!='", "'<'", "'>'", 
      "'='", "'/'", "'|'", "'^'", "'*'", "'%'", "'\\u003F'", "'+'", "'-'", 
      "'('", "')'", "'{'", "'}'", "'['", "']'", "','", "':'"
    },
    std::vector<std::string>{
      "", "K_ACYCLIC", "K_AND", "K_ANGULAR", "K_ANY", "K_AS", "K_AVG", "K_ALL", 
      "K_ASC", "K_BY", "K_BOOL", "K_COUNT", "K_CREATE", "K_DELETE", "K_DESCRIBE", 
      "K_DESC", "K_DIMENSIONS", "K_DISTINCT", "K_EDGE", "K_EUCLIDEAN", "K_FROM", 
      "K_INCOMING", "K_INDEX", "K_INSERT", "K_INTEGER", "K_INTO", "K_IS", 
      "K_FALSE", "K_FLOAT", "K_GROUP", "K_IDENTITY", "K_LABELS", "K_LABEL", 
      "K_LIMIT", "K_MANHATTAN", "K_MATCH", "K_MAX", "K_MIN", "K_NFKD_CASEFOLD", 
      "K_NORMALIZE", "K_OBJECTS", "K_OFFSET", "K_ON", "K_OPTIONAL", "K_ORDER", 
      "K_OR", "K_OUTGOING", "K_PREFIX", "K_PROPERTIES", "K_PROPERTY", "K_NOT", 
      "K_NULL", "K_SHORTEST", "K_SHOW", "K_SIMPLE", "K_TENSOR_DISTANCE", 
      "K_TEXT_SEARCH", "K_REGEX", "K_RETURN", "K_SET", "K_SUM", "K_STRING", 
      "K_STORE", "K_TENSOR", "K_TEXT", "K_TRUE", "K_TOKENIZE", "K_TRAILS", 
      "K_VALUES", "K_WALKS", "K_WITH", "K_WHERE", "K_WS_KEEP_PUNCT", "K_WS_RM_PUNCT", 
      "K_WS_SPLIT_PUNCT", "TRUE_PROP", "FALSE_PROP", "ANON_ID", "EDGE_ID", 
      "KEY", "TYPE", "TYPE_VAR", "VARIABLE", "STRING", "UNSIGNED_INTEGER", 
      "UNSIGNED_FLOAT", "UNSIGNED_SCIENTIFIC_NOTATION", "NAME", "LEQ", "GEQ", 
      "EQ", "NEQ", "LT", "GT", "SINGLE_EQ", "PATH_SEQUENCE", "PATH_ALTERNATIVE", 
      "PATH_NEGATION", "STAR", "PERCENT", "QUESTION_MARK", "PLUS", "MINUS", 
      "L_PAR", "R_PAR", "LCURLY_BRACKET", "RCURLY_BRACKET", "LSQUARE_BRACKET", 
      "RSQUARE_BRACKET", "COMMA", "COLON", "WHITE_SPACE", "SINGLE_LINE_COMMENT", 
      "UNRECOGNIZED"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,113,1078,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
  	7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,
  	7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,
  	7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,
  	7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,
  	7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,
  	7,140,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
  	1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,
  	6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
  	1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,
  	1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,
  	1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
  	1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,
  	1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
  	1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
  	1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
  	1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,
  	1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
  	1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
  	1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
  	1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,
  	1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,
  	1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
  	1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
  	1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,
  	1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,
  	1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,
  	1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
  	1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,
  	1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,
  	1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,
  	1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,
  	1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,
  	1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,
  	1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,
  	1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,
  	1,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,
  	1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,
  	1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,
  	1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,
  	1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
  	1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,
  	1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,
  	1,75,1,75,1,76,1,76,1,76,1,76,1,76,5,76,817,8,76,10,76,12,76,820,9,76,
  	1,77,1,77,1,77,1,77,1,77,5,77,827,8,77,10,77,12,77,830,9,77,1,78,1,78,
  	1,78,5,78,835,8,78,10,78,12,78,838,9,78,1,79,1,79,1,79,5,79,843,8,79,
  	10,79,12,79,846,9,79,1,80,1,80,1,80,1,80,5,80,852,8,80,10,80,12,80,855,
  	9,80,1,81,1,81,1,81,5,81,860,8,81,10,81,12,81,863,9,81,1,82,1,82,1,82,
  	1,82,5,82,869,8,82,10,82,12,82,872,9,82,1,82,1,82,1,83,4,83,877,8,83,
  	11,83,12,83,878,1,84,4,84,882,8,84,11,84,12,84,883,1,84,1,84,5,84,888,
  	8,84,10,84,12,84,891,9,84,1,84,1,84,4,84,895,8,84,11,84,12,84,896,3,84,
  	899,8,84,1,85,4,85,902,8,85,11,85,12,85,903,1,85,1,85,5,85,908,8,85,10,
  	85,12,85,911,9,85,1,85,1,85,1,85,1,85,4,85,917,8,85,11,85,12,85,918,1,
  	85,1,85,1,85,4,85,924,8,85,11,85,12,85,925,1,85,1,85,3,85,930,8,85,1,
  	86,1,86,5,86,934,8,86,10,86,12,86,937,9,86,1,87,1,87,1,87,1,88,1,88,1,
  	88,1,89,1,89,1,89,1,90,1,90,1,90,1,91,1,91,1,92,1,92,1,93,1,93,1,94,1,
  	94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,1,98,1,99,1,99,1,100,1,100,1,101,
  	1,101,1,102,1,102,1,103,1,103,1,104,1,104,1,105,1,105,1,106,1,106,1,107,
  	1,107,1,108,1,108,1,109,1,109,1,110,4,110,990,8,110,11,110,12,110,991,
  	1,110,1,110,1,111,1,111,1,111,1,111,5,111,1000,8,111,10,111,12,111,1003,
  	9,111,1,111,3,111,1006,8,111,1,111,1,111,3,111,1010,8,111,1,111,1,111,
  	1,112,1,112,1,113,1,113,1,114,1,114,3,114,1020,8,114,1,114,4,114,1023,
  	8,114,11,114,12,114,1024,1,115,1,115,1,116,1,116,1,117,1,117,1,118,1,
  	118,1,119,1,119,1,120,1,120,1,121,1,121,1,122,1,122,1,123,1,123,1,124,
  	1,124,1,125,1,125,1,126,1,126,1,127,1,127,1,128,1,128,1,129,1,129,1,130,
  	1,130,1,131,1,131,1,132,1,132,1,133,1,133,1,134,1,134,1,135,1,135,1,136,
  	1,136,1,137,1,137,1,138,1,138,1,139,1,139,1,140,1,140,0,0,141,1,1,3,2,
  	5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
  	16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
  	55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
  	39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
  	101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
  	121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
  	141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,
  	161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,
  	181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,
  	201,101,203,102,205,103,207,104,209,105,211,106,213,107,215,108,217,109,
  	219,110,221,111,223,112,225,113,227,0,229,0,231,0,233,0,235,0,237,0,239,
  	0,241,0,243,0,245,0,247,0,249,0,251,0,253,0,255,0,257,0,259,0,261,0,263,
  	0,265,0,267,0,269,0,271,0,273,0,275,0,277,0,279,0,281,0,1,0,34,1,0,49,
  	57,1,0,48,57,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,34,34,
  	3,0,9,10,13,13,32,32,2,0,10,10,13,13,2,0,69,69,101,101,2,0,43,43,45,45,
  	2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,
  	70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,
  	0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,
  	2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,
  	2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,
  	2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,
  	2,0,90,90,122,122,1075,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
  	0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
  	1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
  	0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
  	0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
  	1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
  	0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,
  	0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
  	1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
  	0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,
  	0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,
  	0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,
  	0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,
  	0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,
  	0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,
  	0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,
  	0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,
  	0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,
  	0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,
  	0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,
  	0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,
  	0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,
  	0,0,225,1,0,0,0,1,283,1,0,0,0,3,291,1,0,0,0,5,295,1,0,0,0,7,303,1,0,0,
  	0,9,307,1,0,0,0,11,310,1,0,0,0,13,314,1,0,0,0,15,318,1,0,0,0,17,322,1,
  	0,0,0,19,325,1,0,0,0,21,330,1,0,0,0,23,336,1,0,0,0,25,343,1,0,0,0,27,
  	350,1,0,0,0,29,359,1,0,0,0,31,364,1,0,0,0,33,375,1,0,0,0,35,384,1,0,0,
  	0,37,389,1,0,0,0,39,399,1,0,0,0,41,404,1,0,0,0,43,413,1,0,0,0,45,419,
  	1,0,0,0,47,426,1,0,0,0,49,434,1,0,0,0,51,439,1,0,0,0,53,442,1,0,0,0,55,
  	448,1,0,0,0,57,454,1,0,0,0,59,460,1,0,0,0,61,469,1,0,0,0,63,476,1,0,0,
  	0,65,482,1,0,0,0,67,488,1,0,0,0,69,498,1,0,0,0,71,504,1,0,0,0,73,508,
  	1,0,0,0,75,512,1,0,0,0,77,526,1,0,0,0,79,536,1,0,0,0,81,544,1,0,0,0,83,
  	551,1,0,0,0,85,554,1,0,0,0,87,563,1,0,0,0,89,569,1,0,0,0,91,572,1,0,0,
  	0,93,581,1,0,0,0,95,588,1,0,0,0,97,599,1,0,0,0,99,608,1,0,0,0,101,612,
  	1,0,0,0,103,617,1,0,0,0,105,626,1,0,0,0,107,631,1,0,0,0,109,638,1,0,0,
  	0,111,654,1,0,0,0,113,666,1,0,0,0,115,672,1,0,0,0,117,679,1,0,0,0,119,
  	683,1,0,0,0,121,687,1,0,0,0,123,694,1,0,0,0,125,700,1,0,0,0,127,707,1,
  	0,0,0,129,712,1,0,0,0,131,717,1,0,0,0,133,726,1,0,0,0,135,733,1,0,0,0,
  	137,740,1,0,0,0,139,746,1,0,0,0,141,751,1,0,0,0,143,757,1,0,0,0,145,771,
  	1,0,0,0,147,783,1,0,0,0,149,798,1,0,0,0,151,804,1,0,0,0,153,811,1,0,0,
  	0,155,821,1,0,0,0,157,831,1,0,0,0,159,839,1,0,0,0,161,847,1,0,0,0,163,
  	856,1,0,0,0,165,864,1,0,0,0,167,876,1,0,0,0,169,898,1,0,0,0,171,929,1,
  	0,0,0,173,931,1,0,0,0,175,938,1,0,0,0,177,941,1,0,0,0,179,944,1,0,0,0,
  	181,947,1,0,0,0,183,950,1,0,0,0,185,952,1,0,0,0,187,954,1,0,0,0,189,956,
  	1,0,0,0,191,958,1,0,0,0,193,960,1,0,0,0,195,962,1,0,0,0,197,964,1,0,0,
  	0,199,966,1,0,0,0,201,968,1,0,0,0,203,970,1,0,0,0,205,972,1,0,0,0,207,
  	974,1,0,0,0,209,976,1,0,0,0,211,978,1,0,0,0,213,980,1,0,0,0,215,982,1,
  	0,0,0,217,984,1,0,0,0,219,986,1,0,0,0,221,989,1,0,0,0,223,995,1,0,0,0,
  	225,1013,1,0,0,0,227,1015,1,0,0,0,229,1017,1,0,0,0,231,1026,1,0,0,0,233,
  	1028,1,0,0,0,235,1030,1,0,0,0,237,1032,1,0,0,0,239,1034,1,0,0,0,241,1036,
  	1,0,0,0,243,1038,1,0,0,0,245,1040,1,0,0,0,247,1042,1,0,0,0,249,1044,1,
  	0,0,0,251,1046,1,0,0,0,253,1048,1,0,0,0,255,1050,1,0,0,0,257,1052,1,0,
  	0,0,259,1054,1,0,0,0,261,1056,1,0,0,0,263,1058,1,0,0,0,265,1060,1,0,0,
  	0,267,1062,1,0,0,0,269,1064,1,0,0,0,271,1066,1,0,0,0,273,1068,1,0,0,0,
  	275,1070,1,0,0,0,277,1072,1,0,0,0,279,1074,1,0,0,0,281,1076,1,0,0,0,283,
  	284,3,231,115,0,284,285,3,235,117,0,285,286,3,279,139,0,286,287,3,235,
  	117,0,287,288,3,253,126,0,288,289,3,247,123,0,289,290,3,235,117,0,290,
  	2,1,0,0,0,291,292,3,231,115,0,292,293,3,257,128,0,293,294,3,237,118,0,
  	294,4,1,0,0,0,295,296,3,231,115,0,296,297,3,257,128,0,297,298,3,243,121,
  	0,298,299,3,271,135,0,299,300,3,253,126,0,300,301,3,231,115,0,301,302,
  	3,265,132,0,302,6,1,0,0,0,303,304,3,231,115,0,304,305,3,257,128,0,305,
  	306,3,279,139,0,306,8,1,0,0,0,307,308,3,231,115,0,308,309,3,267,133,0,
  	309,10,1,0,0,0,310,311,3,231,115,0,311,312,3,273,136,0,312,313,3,243,
  	121,0,313,12,1,0,0,0,314,315,3,231,115,0,315,316,3,253,126,0,316,317,
  	3,253,126,0,317,14,1,0,0,0,318,319,3,231,115,0,319,320,3,267,133,0,320,
  	321,3,235,117,0,321,16,1,0,0,0,322,323,3,233,116,0,323,324,3,279,139,
  	0,324,18,1,0,0,0,325,326,3,233,116,0,326,327,3,259,129,0,327,328,3,259,
  	129,0,328,329,3,253,126,0,329,20,1,0,0,0,330,331,3,235,117,0,331,332,
  	3,259,129,0,332,333,3,271,135,0,333,334,3,257,128,0,334,335,3,269,134,
  	0,335,22,1,0,0,0,336,337,3,235,117,0,337,338,3,265,132,0,338,339,3,239,
  	119,0,339,340,3,231,115,0,340,341,3,269,134,0,341,342,3,239,119,0,342,
  	24,1,0,0,0,343,344,3,237,118,0,344,345,3,239,119,0,345,346,3,253,126,
  	0,346,347,3,239,119,0,347,348,3,269,134,0,348,349,3,239,119,0,349,26,
  	1,0,0,0,350,351,3,237,118,0,351,352,3,239,119,0,352,353,3,267,133,0,353,
  	354,3,235,117,0,354,355,3,265,132,0,355,356,3,247,123,0,356,357,3,233,
  	116,0,357,358,3,239,119,0,358,28,1,0,0,0,359,360,3,237,118,0,360,361,
  	3,239,119,0,361,362,3,267,133,0,362,363,3,235,117,0,363,30,1,0,0,0,364,
  	365,3,237,118,0,365,366,3,247,123,0,366,367,3,255,127,0,367,368,3,239,
  	119,0,368,369,3,257,128,0,369,370,3,267,133,0,370,371,3,247,123,0,371,
  	372,3,259,129,0,372,373,3,257,128,0,373,374,3,267,133,0,374,32,1,0,0,
  	0,375,376,3,237,118,0,376,377,3,247,123,0,377,378,3,267,133,0,378,379,
  	3,269,134,0,379,380,3,247,123,0,380,381,3,257,128,0,381,382,3,235,117,
  	0,382,383,3,269,134,0,383,34,1,0,0,0,384,385,3,239,119,0,385,386,3,237,
  	118,0,386,387,3,243,121,0,387,388,3,239,119,0,388,36,1,0,0,0,389,390,
  	3,239,119,0,390,391,3,271,135,0,391,392,3,235,117,0,392,393,3,253,126,
  	0,393,394,3,247,123,0,394,395,3,237,118,0,395,396,3,239,119,0,396,397,
  	3,231,115,0,397,398,3,257,128,0,398,38,1,0,0,0,399,400,3,241,120,0,400,
  	401,3,265,132,0,401,402,3,259,129,0,402,403,3,255,127,0,403,40,1,0,0,
  	0,404,405,3,247,123,0,405,406,3,257,128,0,406,407,3,235,117,0,407,408,
  	3,259,129,0,408,409,3,255,127,0,409,410,3,247,123,0,410,411,3,257,128,
  	0,411,412,3,243,121,0,412,42,1,0,0,0,413,414,3,247,123,0,414,415,3,257,
  	128,0,415,416,3,237,118,0,416,417,3,239,119,0,417,418,3,277,138,0,418,
  	44,1,0,0,0,419,420,3,247,123,0,420,421,3,257,128,0,421,422,3,267,133,
  	0,422,423,3,239,119,0,423,424,3,265,132,0,424,425,3,269,134,0,425,46,
  	1,0,0,0,426,427,3,247,123,0,427,428,3,257,128,0,428,429,3,269,134,0,429,
  	430,3,239,119,0,430,431,3,243,121,0,431,432,3,239,119,0,432,433,3,265,
  	132,0,433,48,1,0,0,0,434,435,3,247,123,0,435,436,3,257,128,0,436,437,
  	3,269,134,0,437,438,3,259,129,0,438,50,1,0,0,0,439,440,3,247,123,0,440,
  	441,3,267,133,0,441,52,1,0,0,0,442,443,5,102,0,0,443,444,5,97,0,0,444,
  	445,5,108,0,0,445,446,5,115,0,0,446,447,5,101,0,0,447,54,1,0,0,0,448,
  	449,3,241,120,0,449,450,3,253,126,0,450,451,3,259,129,0,451,452,3,231,
  	115,0,452,453,3,269,134,0,453,56,1,0,0,0,454,455,3,243,121,0,455,456,
  	3,265,132,0,456,457,3,259,129,0,457,458,3,271,135,0,458,459,3,261,130,
  	0,459,58,1,0,0,0,460,461,3,247,123,0,461,462,3,237,118,0,462,463,3,239,
  	119,0,463,464,3,257,128,0,464,465,3,269,134,0,465,466,3,247,123,0,466,
  	467,3,269,134,0,467,468,3,279,139,0,468,60,1,0,0,0,469,470,3,253,126,
  	0,470,471,3,231,115,0,471,472,3,233,116,0,472,473,3,239,119,0,473,474,
  	3,253,126,0,474,475,3,267,133,0,475,62,1,0,0,0,476,477,3,253,126,0,477,
  	478,3,231,115,0,478,479,3,233,116,0,479,480,3,239,119,0,480,481,3,253,
  	126,0,481,64,1,0,0,0,482,483,3,253,126,0,483,484,3,247,123,0,484,485,
  	3,255,127,0,485,486,3,247,123,0,486,487,3,269,134,0,487,66,1,0,0,0,488,
  	489,3,255,127,0,489,490,3,231,115,0,490,491,3,257,128,0,491,492,3,245,
  	122,0,492,493,3,231,115,0,493,494,3,269,134,0,494,495,3,269,134,0,495,
  	496,3,231,115,0,496,497,3,257,128,0,497,68,1,0,0,0,498,499,3,255,127,
  	0,499,500,3,231,115,0,500,501,3,269,134,0,501,502,3,235,117,0,502,503,
  	3,245,122,0,503,70,1,0,0,0,504,505,3,255,127,0,505,506,3,231,115,0,506,
  	507,3,277,138,0,507,72,1,0,0,0,508,509,3,255,127,0,509,510,3,247,123,
  	0,510,511,3,257,128,0,511,74,1,0,0,0,512,513,3,257,128,0,513,514,3,241,
  	120,0,514,515,3,251,125,0,515,516,3,237,118,0,516,517,5,95,0,0,517,518,
  	3,235,117,0,518,519,3,231,115,0,519,520,3,267,133,0,520,521,3,239,119,
  	0,521,522,3,241,120,0,522,523,3,259,129,0,523,524,3,253,126,0,524,525,
  	3,237,118,0,525,76,1,0,0,0,526,527,3,257,128,0,527,528,3,259,129,0,528,
  	529,3,265,132,0,529,530,3,255,127,0,530,531,3,231,115,0,531,532,3,253,
  	126,0,532,533,3,247,123,0,533,534,3,281,140,0,534,535,3,239,119,0,535,
  	78,1,0,0,0,536,537,3,259,129,0,537,538,3,233,116,0,538,539,3,249,124,
  	0,539,540,3,239,119,0,540,541,3,235,117,0,541,542,3,269,134,0,542,543,
  	3,267,133,0,543,80,1,0,0,0,544,545,3,259,129,0,545,546,3,241,120,0,546,
  	547,3,241,120,0,547,548,3,267,133,0,548,549,3,239,119,0,549,550,3,269,
  	134,0,550,82,1,0,0,0,551,552,3,259,129,0,552,553,3,257,128,0,553,84,1,
  	0,0,0,554,555,3,259,129,0,555,556,3,261,130,0,556,557,3,269,134,0,557,
  	558,3,247,123,0,558,559,3,259,129,0,559,560,3,257,128,0,560,561,3,231,
  	115,0,561,562,3,253,126,0,562,86,1,0,0,0,563,564,3,259,129,0,564,565,
  	3,265,132,0,565,566,3,237,118,0,566,567,3,239,119,0,567,568,3,265,132,
  	0,568,88,1,0,0,0,569,570,3,259,129,0,570,571,3,265,132,0,571,90,1,0,0,
  	0,572,573,3,259,129,0,573,574,3,271,135,0,574,575,3,269,134,0,575,576,
  	3,243,121,0,576,577,3,259,129,0,577,578,3,247,123,0,578,579,3,257,128,
  	0,579,580,3,243,121,0,580,92,1,0,0,0,581,582,3,261,130,0,582,583,3,265,
  	132,0,583,584,3,239,119,0,584,585,3,241,120,0,585,586,3,247,123,0,586,
  	587,3,277,138,0,587,94,1,0,0,0,588,589,3,261,130,0,589,590,3,265,132,
  	0,590,591,3,259,129,0,591,592,3,261,130,0,592,593,3,239,119,0,593,594,
  	3,265,132,0,594,595,3,269,134,0,595,596,3,247,123,0,596,597,3,239,119,
  	0,597,598,3,267,133,0,598,96,1,0,0,0,599,600,3,261,130,0,600,601,3,265,
  	132,0,601,602,3,259,129,0,602,603,3,261,130,0,603,604,3,239,119,0,604,
  	605,3,265,132,0,605,606,3,269,134,0,606,607,3,279,139,0,607,98,1,0,0,
  	0,608,609,3,257,128,0,609,610,3,259,129,0,610,611,3,269,134,0,611,100,
  	1,0,0,0,612,613,3,257,128,0,613,614,3,271,135,0,614,615,3,253,126,0,615,
  	616,3,253,126,0,616,102,1,0,0,0,617,618,3,267,133,0,618,619,3,245,122,
  	0,619,620,3,259,129,0,620,621,3,265,132,0,621,622,3,269,134,0,622,623,
  	3,239,119,0,623,624,3,267,133,0,624,625,3,269,134,0,625,104,1,0,0,0,626,
  	627,3,267,133,0,627,628,3,245,122,0,628,629,3,259,129,0,629,630,3,275,
  	137,0,630,106,1,0,0,0,631,632,3,267,133,0,632,633,3,247,123,0,633,634,
  	3,255,127,0,634,635,3,261,130,0,635,636,3,253,126,0,636,637,3,239,119,
  	0,637,108,1,0,0,0,638,639,3,269,134,0,639,640,3,239,119,0,640,641,3,257,
  	128,0,641,642,3,267,133,0,642,643,3,259,129,0,643,644,3,265,132,0,644,
  	645,5,95,0,0,645,646,3,237,118,0,646,647,3,247,123,0,647,648,3,267,133,
  	0,648,649,3,269,134,0,649,650,3,231,115,0,650,651,3,257,128,0,651,652,
  	3,235,117,0,652,653,3,239,119,0,653,110,1,0,0,0,654,655,3,269,134,0,655,
  	656,3,239,119,0,656,657,3,277,138,0,657,658,3,269,134,0,658,659,5,95,
  	0,0,659,660,3,267,133,0,660,661,3,239,119,0,661,662,3,231,115,0,662,663,
  	3,265,132,0,663,664,3,235,117,0,664,665,3,245,122,0,665,112,1,0,0,0,666,
  	667,3,265,132,0,667,668,3,239,119,0,668,669,3,243,121,0,669,670,3,239,
  	119,0,670,671,3,277,138,0,671,114,1,0,0,0,672,673,3,265,132,0,673,674,
  	3,239,119,0,674,675,3,269,134,0,675,676,3,271,135,0,676,677,3,265,132,
  	0,677,678,3,257,128,0,678,116,1,0,0,0,679,680,3,267,133,0,680,681,3,239,
  	119,0,681,682,3,269,134,0,682,118,1,0,0,0,683,684,3,267,133,0,684,685,
  	3,271,135,0,685,686,3,255,127,0,686,120,1,0,0,0,687,688,3,267,133,0,688,
  	689,3,269,134,0,689,690,3,265,132,0,690,691,3,247,123,0,691,692,3,257,
  	128,0,692,693,3,243,121,0,693,122,1,0,0,0,694,695,3,267,133,0,695,696,
  	3,269,134,0,696,697,3,259,129,0,697,698,3,265,132,0,698,699,3,239,119,
  	0,699,124,1,0,0,0,700,701,3,269,134,0,701,702,3,239,119,0,702,703,3,257,
  	128,0,703,704,3,267,133,0,704,705,3,259,129,0,705,706,3,265,132,0,706,
  	126,1,0,0,0,707,708,3,269,134,0,708,709,3,239,119,0,709,710,3,277,138,
  	0,710,711,3,269,134,0,711,128,1,0,0,0,712,713,5,116,0,0,713,714,5,114,
  	0,0,714,715,5,117,0,0,715,716,5,101,0,0,716,130,1,0,0,0,717,718,3,269,
  	134,0,718,719,3,259,129,0,719,720,3,251,125,0,720,721,3,239,119,0,721,
  	722,3,257,128,0,722,723,3,247,123,0,723,724,3,281,140,0,724,725,3,239,
  	119,0,725,132,1,0,0,0,726,727,3,269,134,0,727,728,3,265,132,0,728,729,
  	3,231,115,0,729,730,3,247,123,0,730,731,3,253,126,0,731,732,3,267,133,
  	0,732,134,1,0,0,0,733,734,3,273,136,0,734,735,3,231,115,0,735,736,3,253,
  	126,0,736,737,3,271,135,0,737,738,3,239,119,0,738,739,3,267,133,0,739,
  	136,1,0,0,0,740,741,3,275,137,0,741,742,3,231,115,0,742,743,3,253,126,
  	0,743,744,3,251,125,0,744,745,3,267,133,0,745,138,1,0,0,0,746,747,3,275,
  	137,0,747,748,3,247,123,0,748,749,3,269,134,0,749,750,3,245,122,0,750,
  	140,1,0,0,0,751,752,3,275,137,0,752,753,3,245,122,0,753,754,3,239,119,
  	0,754,755,3,265,132,0,755,756,3,239,119,0,756,142,1,0,0,0,757,758,3,275,
  	137,0,758,759,3,267,133,0,759,760,5,95,0,0,760,761,3,251,125,0,761,762,
  	3,239,119,0,762,763,3,239,119,0,763,764,3,261,130,0,764,765,5,95,0,0,
  	765,766,3,261,130,0,766,767,3,271,135,0,767,768,3,257,128,0,768,769,3,
  	235,117,0,769,770,3,269,134,0,770,144,1,0,0,0,771,772,3,275,137,0,772,
  	773,3,267,133,0,773,774,5,95,0,0,774,775,3,265,132,0,775,776,3,255,127,
  	0,776,777,5,95,0,0,777,778,3,261,130,0,778,779,3,271,135,0,779,780,3,
  	257,128,0,780,781,3,235,117,0,781,782,3,269,134,0,782,146,1,0,0,0,783,
  	784,3,275,137,0,784,785,3,267,133,0,785,786,5,95,0,0,786,787,3,267,133,
  	0,787,788,3,261,130,0,788,789,3,253,126,0,789,790,3,247,123,0,790,791,
  	3,269,134,0,791,792,5,95,0,0,792,793,3,261,130,0,793,794,3,271,135,0,
  	794,795,3,257,128,0,795,796,3,235,117,0,796,797,3,269,134,0,797,148,1,
  	0,0,0,798,799,5,58,0,0,799,800,5,116,0,0,800,801,5,114,0,0,801,802,5,
  	117,0,0,802,803,5,101,0,0,803,150,1,0,0,0,804,805,5,58,0,0,805,806,5,
  	102,0,0,806,807,5,97,0,0,807,808,5,108,0,0,808,809,5,115,0,0,809,810,
  	5,101,0,0,810,152,1,0,0,0,811,812,5,95,0,0,812,813,5,97,0,0,813,814,1,
  	0,0,0,814,818,7,0,0,0,815,817,7,1,0,0,816,815,1,0,0,0,817,820,1,0,0,0,
  	818,816,1,0,0,0,818,819,1,0,0,0,819,154,1,0,0,0,820,818,1,0,0,0,821,822,
  	5,95,0,0,822,823,5,101,0,0,823,824,1,0,0,0,824,828,7,0,0,0,825,827,7,
  	1,0,0,826,825,1,0,0,0,827,830,1,0,0,0,828,826,1,0,0,0,828,829,1,0,0,0,
  	829,156,1,0,0,0,830,828,1,0,0,0,831,832,5,46,0,0,832,836,7,2,0,0,833,
  	835,7,3,0,0,834,833,1,0,0,0,835,838,1,0,0,0,836,834,1,0,0,0,836,837,1,
  	0,0,0,837,158,1,0,0,0,838,836,1,0,0,0,839,840,5,58,0,0,840,844,7,2,0,
  	0,841,843,7,3,0,0,842,841,1,0,0,0,843,846,1,0,0,0,844,842,1,0,0,0,844,
  	845,1,0,0,0,845,160,1,0,0,0,846,844,1,0,0,0,847,848,5,58,0,0,848,849,
  	5,63,0,0,849,853,7,2,0,0,850,852,7,3,0,0,851,850,1,0,0,0,852,855,1,0,
  	0,0,853,851,1,0,0,0,853,854,1,0,0,0,854,162,1,0,0,0,855,853,1,0,0,0,856,
  	857,5,63,0,0,857,861,7,2,0,0,858,860,7,3,0,0,859,858,1,0,0,0,860,863,
  	1,0,0,0,861,859,1,0,0,0,861,862,1,0,0,0,862,164,1,0,0,0,863,861,1,0,0,
  	0,864,870,5,34,0,0,865,869,8,4,0,0,866,867,5,92,0,0,867,869,5,34,0,0,
  	868,865,1,0,0,0,868,866,1,0,0,0,869,872,1,0,0,0,870,868,1,0,0,0,870,871,
  	1,0,0,0,871,873,1,0,0,0,872,870,1,0,0,0,873,874,5,34,0,0,874,166,1,0,
  	0,0,875,877,3,227,113,0,876,875,1,0,0,0,877,878,1,0,0,0,878,876,1,0,0,
  	0,878,879,1,0,0,0,879,168,1,0,0,0,880,882,3,227,113,0,881,880,1,0,0,0,
  	882,883,1,0,0,0,883,881,1,0,0,0,883,884,1,0,0,0,884,885,1,0,0,0,885,889,
  	5,46,0,0,886,888,3,227,113,0,887,886,1,0,0,0,888,891,1,0,0,0,889,887,
  	1,0,0,0,889,890,1,0,0,0,890,899,1,0,0,0,891,889,1,0,0,0,892,894,5,46,
  	0,0,893,895,3,227,113,0,894,893,1,0,0,0,895,896,1,0,0,0,896,894,1,0,0,
  	0,896,897,1,0,0,0,897,899,1,0,0,0,898,881,1,0,0,0,898,892,1,0,0,0,899,
  	170,1,0,0,0,900,902,3,227,113,0,901,900,1,0,0,0,902,903,1,0,0,0,903,901,
  	1,0,0,0,903,904,1,0,0,0,904,905,1,0,0,0,905,909,5,46,0,0,906,908,3,227,
  	113,0,907,906,1,0,0,0,908,911,1,0,0,0,909,907,1,0,0,0,909,910,1,0,0,0,
  	910,912,1,0,0,0,911,909,1,0,0,0,912,913,3,229,114,0,913,930,1,0,0,0,914,
  	916,5,46,0,0,915,917,3,227,113,0,916,915,1,0,0,0,917,918,1,0,0,0,918,
  	916,1,0,0,0,918,919,1,0,0,0,919,920,1,0,0,0,920,921,3,229,114,0,921,930,
  	1,0,0,0,922,924,3,227,113,0,923,922,1,0,0,0,924,925,1,0,0,0,925,923,1,
  	0,0,0,925,926,1,0,0,0,926,927,1,0,0,0,927,928,3,229,114,0,928,930,1,0,
  	0,0,929,901,1,0,0,0,929,914,1,0,0,0,929,923,1,0,0,0,930,172,1,0,0,0,931,
  	935,7,2,0,0,932,934,7,3,0,0,933,932,1,0,0,0,934,937,1,0,0,0,935,933,1,
  	0,0,0,935,936,1,0,0,0,936,174,1,0,0,0,937,935,1,0,0,0,938,939,5,60,0,
  	0,939,940,5,61,0,0,940,176,1,0,0,0,941,942,5,62,0,0,942,943,5,61,0,0,
  	943,178,1,0,0,0,944,945,5,61,0,0,945,946,5,61,0,0,946,180,1,0,0,0,947,
  	948,5,33,0,0,948,949,5,61,0,0,949,182,1,0,0,0,950,951,5,60,0,0,951,184,
  	1,0,0,0,952,953,5,62,0,0,953,186,1,0,0,0,954,955,5,61,0,0,955,188,1,0,
  	0,0,956,957,5,47,0,0,957,190,1,0,0,0,958,959,5,124,0,0,959,192,1,0,0,
  	0,960,961,5,94,0,0,961,194,1,0,0,0,962,963,5,42,0,0,963,196,1,0,0,0,964,
  	965,5,37,0,0,965,198,1,0,0,0,966,967,5,63,0,0,967,200,1,0,0,0,968,969,
  	5,43,0,0,969,202,1,0,0,0,970,971,5,45,0,0,971,204,1,0,0,0,972,973,5,40,
  	0,0,973,206,1,0,0,0,974,975,5,41,0,0,975,208,1,0,0,0,976,977,5,123,0,
  	0,977,210,1,0,0,0,978,979,5,125,0,0,979,212,1,0,0,0,980,981,5,91,0,0,
  	981,214,1,0,0,0,982,983,5,93,0,0,983,216,1,0,0,0,984,985,5,44,0,0,985,
  	218,1,0,0,0,986,987,5,58,0,0,987,220,1,0,0,0,988,990,7,5,0,0,989,988,
  	1,0,0,0,990,991,1,0,0,0,991,989,1,0,0,0,991,992,1,0,0,0,992,993,1,0,0,
  	0,993,994,6,110,0,0,994,222,1,0,0,0,995,996,5,47,0,0,996,997,5,47,0,0,
  	997,1001,1,0,0,0,998,1000,8,6,0,0,999,998,1,0,0,0,1000,1003,1,0,0,0,1001,
  	999,1,0,0,0,1001,1002,1,0,0,0,1002,1009,1,0,0,0,1003,1001,1,0,0,0,1004,
  	1006,5,13,0,0,1005,1004,1,0,0,0,1005,1006,1,0,0,0,1006,1007,1,0,0,0,1007,
  	1010,5,10,0,0,1008,1010,5,0,0,1,1009,1005,1,0,0,0,1009,1008,1,0,0,0,1010,
  	1011,1,0,0,0,1011,1012,6,111,1,0,1012,224,1,0,0,0,1013,1014,9,0,0,0,1014,
  	226,1,0,0,0,1015,1016,7,1,0,0,1016,228,1,0,0,0,1017,1019,7,7,0,0,1018,
  	1020,7,8,0,0,1019,1018,1,0,0,0,1019,1020,1,0,0,0,1020,1022,1,0,0,0,1021,
  	1023,3,227,113,0,1022,1021,1,0,0,0,1023,1024,1,0,0,0,1024,1022,1,0,0,
  	0,1024,1025,1,0,0,0,1025,230,1,0,0,0,1026,1027,7,9,0,0,1027,232,1,0,0,
  	0,1028,1029,7,10,0,0,1029,234,1,0,0,0,1030,1031,7,11,0,0,1031,236,1,0,
  	0,0,1032,1033,7,12,0,0,1033,238,1,0,0,0,1034,1035,7,7,0,0,1035,240,1,
  	0,0,0,1036,1037,7,13,0,0,1037,242,1,0,0,0,1038,1039,7,14,0,0,1039,244,
  	1,0,0,0,1040,1041,7,15,0,0,1041,246,1,0,0,0,1042,1043,7,16,0,0,1043,248,
  	1,0,0,0,1044,1045,7,17,0,0,1045,250,1,0,0,0,1046,1047,7,18,0,0,1047,252,
  	1,0,0,0,1048,1049,7,19,0,0,1049,254,1,0,0,0,1050,1051,7,20,0,0,1051,256,
  	1,0,0,0,1052,1053,7,21,0,0,1053,258,1,0,0,0,1054,1055,7,22,0,0,1055,260,
  	1,0,0,0,1056,1057,7,23,0,0,1057,262,1,0,0,0,1058,1059,7,24,0,0,1059,264,
  	1,0,0,0,1060,1061,7,25,0,0,1061,266,1,0,0,0,1062,1063,7,26,0,0,1063,268,
  	1,0,0,0,1064,1065,7,27,0,0,1065,270,1,0,0,0,1066,1067,7,28,0,0,1067,272,
  	1,0,0,0,1068,1069,7,29,0,0,1069,274,1,0,0,0,1070,1071,7,30,0,0,1071,276,
  	1,0,0,0,1072,1073,7,31,0,0,1073,278,1,0,0,0,1074,1075,7,32,0,0,1075,280,
  	1,0,0,0,1076,1077,7,33,0,0,1077,282,1,0,0,0,26,0,818,828,836,844,853,
  	861,868,870,878,883,889,896,898,903,909,918,925,929,935,991,1001,1005,
  	1009,1019,1024,2,0,2,0,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  mql_lexerLexerStaticData = staticData.release();
}

}

MQL_Lexer::MQL_Lexer(CharStream *input) : Lexer(input) {
  MQL_Lexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *mql_lexerLexerStaticData->atn, mql_lexerLexerStaticData->decisionToDFA, mql_lexerLexerStaticData->sharedContextCache);
}

MQL_Lexer::~MQL_Lexer() {
  delete _interpreter;
}

std::string MQL_Lexer::getGrammarFileName() const {
  return "MQL_Lexer.g4";
}

const std::vector<std::string>& MQL_Lexer::getRuleNames() const {
  return mql_lexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& MQL_Lexer::getChannelNames() const {
  return mql_lexerLexerStaticData->channelNames;
}

const std::vector<std::string>& MQL_Lexer::getModeNames() const {
  return mql_lexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& MQL_Lexer::getVocabulary() const {
  return mql_lexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView MQL_Lexer::getSerializedATN() const {
  return mql_lexerLexerStaticData->serializedATN;
}

const atn::ATN& MQL_Lexer::getATN() const {
  return *mql_lexerLexerStaticData->atn;
}




void MQL_Lexer::initialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  mql_lexerLexerInitialize();
#else
  ::antlr4::internal::call_once(mql_lexerLexerOnceFlag, mql_lexerLexerInitialize);
#endif
}
