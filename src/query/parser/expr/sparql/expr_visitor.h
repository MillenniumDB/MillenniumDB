#pragma once

namespace SPARQL {

class ExprVar;
class ExprTerm;

class ExprNot;
class ExprUnaryMinus;
class ExprUnaryPlus;
class ExprMultiplication;
class ExprDivision;
class ExprAddition;
class ExprSubtraction;
class ExprAnd;
class ExprOr;
class ExprEqual;
class ExprNotEqual;
class ExprLess;
class ExprGreater;
class ExprLessOrEqual;
class ExprGreaterOrEqual;

class ExprIn;
class ExprNotIn;

class ExprAggAvg;
class ExprAggCountAll;
class ExprAggCount;
class ExprAggGroupConcat;
class ExprAggMax;
class ExprAggMin;
class ExprAggSample;
class ExprAggSum;

class ExprAbs;
class ExprBNode;
class ExprBound;
class ExprCeil;
class ExprCoalesce;
class ExprConcat;
class ExprContains;
class ExprDatatype;
class ExprDay;
class ExprEncodeForUri;
class ExprExists;
class ExprFloor;
class ExprHours;
class ExprIf;
class ExprIRI;
class ExprIsBlank;
class ExprIsIRI;
class ExprIsLiteral;
class ExprIsNumeric;
class ExprIsURI;
class ExprLang;
class ExprLangMatches;
class ExprLCase;
class ExprMD5;
class ExprMinutes;
class ExprMonth;
class ExprNotExists;
class ExprNow;
class ExprRand;
class ExprRegex;
class ExprReplace;
class ExprRound;
class ExprSameTerm;
class ExprSeconds;
class ExprSHA1;
class ExprSHA256;
class ExprSHA384;
class ExprSHA512;
class ExprStrAfter;
class ExprStrBefore;
class ExprStrDT;
class ExprStrEnds;
class ExprStrLang;
class ExprStrLen;
class ExprStrStarts;
class ExprStrUUID;
class ExprStr;
class ExprSubStr;
class ExprTimezone;
class ExprTZ;
class ExprUCase;
class ExprURI;
class ExprUUID;
class ExprYear;
class ExprCast;

class ExprCosineDistance;
class ExprCosineSimilarity;
class ExprDot;
class ExprEuclideanDistance;
class ExprManhattanDistance;
class ExprPow;
class ExprSqrt;
class ExprSum;

class ExprVisitor {
public:
    virtual ~ExprVisitor() = default;

    virtual void visit(ExprVar&) = 0;
    virtual void visit(ExprTerm&) = 0;

    virtual void visit(ExprNot&) = 0;
    virtual void visit(ExprUnaryMinus&) = 0;
    virtual void visit(ExprUnaryPlus&) = 0;
    virtual void visit(ExprMultiplication&) = 0;
    virtual void visit(ExprDivision&) = 0;
    virtual void visit(ExprAddition&) = 0;
    virtual void visit(ExprSubtraction&) = 0;
    virtual void visit(ExprAnd&) = 0;
    virtual void visit(ExprOr&) = 0;
    virtual void visit(ExprLess&) = 0;
    virtual void visit(ExprGreater&) = 0;
    virtual void visit(ExprEqual&) = 0;
    virtual void visit(ExprNotEqual&) = 0;
    virtual void visit(ExprLessOrEqual&) = 0;
    virtual void visit(ExprGreaterOrEqual&) = 0;

    virtual void visit(ExprIn&) = 0;
    virtual void visit(ExprNotIn&) = 0;

    virtual void visit(ExprAggAvg&) = 0;
    virtual void visit(ExprAggCount&) = 0;
    virtual void visit(ExprAggCountAll&) = 0;
    virtual void visit(ExprAggGroupConcat&) = 0;
    virtual void visit(ExprAggMax&) = 0;
    virtual void visit(ExprAggMin&) = 0;
    virtual void visit(ExprAggSample&) = 0;
    virtual void visit(ExprAggSum&) = 0;
    virtual void visit(ExprAbs&) = 0;
    virtual void visit(ExprBNode&) = 0;
    virtual void visit(ExprBound&) = 0;
    virtual void visit(ExprCeil&) = 0;
    virtual void visit(ExprCoalesce&) = 0;
    virtual void visit(ExprConcat&) = 0;
    virtual void visit(ExprContains&) = 0;
    virtual void visit(ExprDatatype&) = 0;
    virtual void visit(ExprDay&) = 0;
    virtual void visit(ExprEncodeForUri&) = 0;
    virtual void visit(ExprExists&) = 0;
    virtual void visit(ExprFloor&) = 0;
    virtual void visit(ExprHours&) = 0;
    virtual void visit(ExprIf&) = 0;
    virtual void visit(ExprIRI&) = 0;
    virtual void visit(ExprIsBlank&) = 0;
    virtual void visit(ExprIsIRI&) = 0;
    virtual void visit(ExprIsLiteral&) = 0;
    virtual void visit(ExprIsNumeric&) = 0;
    virtual void visit(ExprIsURI&) = 0;
    virtual void visit(ExprLang&) = 0;
    virtual void visit(ExprLangMatches&) = 0;
    virtual void visit(ExprLCase&) = 0;
    virtual void visit(ExprMD5&) = 0;
    virtual void visit(ExprMinutes&) = 0;
    virtual void visit(ExprMonth&) = 0;
    virtual void visit(ExprNotExists&) = 0;
    virtual void visit(ExprNow&) = 0;
    virtual void visit(ExprRand&) = 0;
    virtual void visit(ExprRegex&) = 0;
    virtual void visit(ExprReplace&) = 0;
    virtual void visit(ExprRound&) = 0;
    virtual void visit(ExprSameTerm&) = 0;
    virtual void visit(ExprSeconds&) = 0;
    virtual void visit(ExprSHA1&) = 0;
    virtual void visit(ExprSHA256&) = 0;
    virtual void visit(ExprSHA384&) = 0;
    virtual void visit(ExprSHA512&) = 0;
    virtual void visit(ExprStrAfter&) = 0;
    virtual void visit(ExprStrBefore&) = 0;
    virtual void visit(ExprStrDT&) = 0;
    virtual void visit(ExprStrEnds&) = 0;
    virtual void visit(ExprStrLang&) = 0;
    virtual void visit(ExprStrLen&) = 0;
    virtual void visit(ExprStrStarts&) = 0;
    virtual void visit(ExprStrUUID&) = 0;
    virtual void visit(ExprStr&) = 0;
    virtual void visit(ExprSubStr&) = 0;
    virtual void visit(ExprTimezone&) = 0;
    virtual void visit(ExprTZ&) = 0;
    virtual void visit(ExprUCase&) = 0;
    virtual void visit(ExprURI&) = 0;
    virtual void visit(ExprUUID&) = 0;
    virtual void visit(ExprYear&) = 0;
    virtual void visit(ExprCast&) = 0;
    virtual void visit(ExprCosineDistance&) = 0;
    virtual void visit(ExprCosineSimilarity&) = 0;
    virtual void visit(ExprDot&) = 0;
    virtual void visit(ExprEuclideanDistance&) = 0;
    virtual void visit(ExprManhattanDistance&) = 0;
    virtual void visit(ExprPow&) = 0;
    virtual void visit(ExprSqrt&) = 0;
    virtual void visit(ExprSum&) = 0;
};
} // namespace SPARQL
