#include "graph_models/rdf_model/datatypes/decimal.h"

#include <cassert>
#include <iostream>
#include <string>
#include <vector>

int main() {
    std::vector<std::pair<std::string, std::string>>  tests = {
        { "+000000000000.3030303303033333333", "0.3030303303033333333"     },
        { "+000000010000.3030303303033333333", "10000.3030303303033333333" },
        { "+.3030303303033333333",             "0.3030303303033333333"     },
        { "+.3030303303033333333000",          "0.3030303303033333333"     },
        { "+0.3030303303033333333000",         "0.3030303303033333333"     },
        { "+000100.3030303303033333333000",    "100.3030303303033333333"   },

        { "000000000000.3030303303033333333", "0.3030303303033333333"     },
        { "000000010000.3030303303033333333", "10000.3030303303033333333" },
        { ".3030303303033333333",             "0.3030303303033333333"     },
        { ".3030303303033333333000",          "0.3030303303033333333"     },
        { "0.3030303303033333333000",         "0.3030303303033333333"     },
        { "000100.3030303303033333333000",    "100.3030303303033333333"   },

        { "-000000000000.3030303303033333333", "-0.3030303303033333333"     },
        { "-000000010000.3030303303033333333", "-10000.3030303303033333333" },
        { "-.3030303303033333333",             "-0.3030303303033333333"     },
        { "-.3030303303033333333000",          "-0.3030303303033333333"     },
        { "-0.3030303303033333333000",         "-0.3030303303033333333"     },
        { "-000100.3030303303033333333000",    "-100.3030303303033333333"   },

        { "123456789101112", "123456789101112.0"   },
        { "0.0",             "0.0"                 },
        { "0000.0000",       "0.0"                 },
        { "0",               "0.0"                 },
    };

    for (auto dec : tests) {
        bool error;
        std::string norm = Decimal(dec.first, &error).to_string();
        assert(!error);
        if (norm != dec.second) {
            std::cout << "Error: " << dec.first << " -> " << norm << " != " << dec.second << std::endl;
            return 1;
        }
    }
    return 0;
}
