#pragma once

#include "storage/file_id.h"
#include "storage/page/versioned_page.h"


class LSHTree;


/**
 * Page structure:
 * uint64_t num_split_data
 * SplitData split_data[(sizeof(VPage) - sizeof(uint64_t)) / sizeof(SplitData)]
 */
class LSHTreeDir {
    friend class LSHTree;

public:
    struct Split {
        // Both left_id and right_id equals to the original_id + 1:
        //  {side}_id < 0 means leaf
        //  {side}_id > 0 means dir
        int64_t left_id;
        int64_t right_id;
        uint64_t parent_id;
        uint64_t tensor_offset;
    };

    static constexpr auto MAX_SPLIT_DATA = (VPage::SIZE - sizeof(uint64_t)) / sizeof(Split);

    LSHTreeDir() noexcept;

    explicit LSHTreeDir(VPage* page) noexcept;

    LSHTreeDir(const LSHTreeDir& other) = delete;
    LSHTreeDir& operator=(const LSHTreeDir& other) = delete;

    LSHTreeDir(LSHTreeDir&& other) = delete;
    LSHTreeDir& operator=(LSHTreeDir&& other) noexcept;

    ~LSHTreeDir();

    bool full() const;

    void upgrade_to_editable();

private:
    uint64_t* num_split_data;
    Split* split_data;

    VPage* page;
    FileId split_file_id;
};